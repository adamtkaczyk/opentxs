// Copyright (c) 2010-2022 The Open-Transactions developers
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// clang-format off
#pragma once

#include "opentxs/Export.hpp"  // IWYU pragma: export

#define OT_BLOCKCHAIN @OT_BLOCKCHAIN_EXPORT@
// clang-format on

// NOLINTBEGIN(modernize-concat-nested-namespaces)
namespace opentxs  // NOLINT
{
// inline namespace v1
// {
namespace alloc
{
}  // namespace alloc

namespace api
{
namespace crypto
{
}  // namespace crypto

namespace network
{
}  // namespace network

namespace session
{
}  // namespace session
}  // namespace api

namespace blockchain
{
namespace block
{
namespace bitcoin
{
}  // namespace bitcoin
}  // namespace block

namespace cfilter
{
}  // namespace cfilter

namespace crypto
{
}  // namespace crypto

namespace node
{
}  // namespace node

namespace p2p
{
}  // namespace p2p
}  // namespace blockchain

namespace contract
{
namespace peer
{
namespace reply
{
}  // namespace reply

namespace request
{
}  // namespace request
}  // namespace peer

namespace unit
{
}  // namespace unit
}  // namespace contract

namespace crypto
{
namespace key
{
namespace asymmetric
{
}  // namespace asymmetric

namespace symmetric
{
}  // namespace symmetric
}  // namespace key
}  // namespace crypto

namespace display
{
}  // namespace display

namespace identifier
{
}  // namespace identifier

namespace identity
{
namespace credential
{
}  // namespace credential

namespace wot
{
}  // namespace wot

namespace claim
{
}  // namespace claim

namespace verification
{
}  // namespace verification
}  // namespace identity

namespace iterator
{
}  // namespace iterator

namespace network
{
namespace asio
{
}  // namespace asio

namespace blockchain
{
namespace bitcoin
{
}  // namespace bitcoin
}  // namespace blockchain

namespace p2p
{
}  // namespace p2p

namespace zeromq
{
namespace curve
{
}  // namespace curve

namespace socket
{
}  // namespace socket

namespace zap
{
}  // namespace zap
}  // namespace zeromq
}  // namespace network

namespace otx
{
namespace blind
{
}  // namespace blind

namespace client
{
}  // namespace client

namespace context
{
}  // namespace context
}  // namespace otx

namespace rpc
{
namespace request
{
}  // namespace request

namespace response
{
}  // namespace response
}  // namespace rpc

namespace storage
{
}  // namespace storage

namespace ui
{
namespace qt
{
}  // namespace qt
}  // namespace ui
// }  // namespace v1
}  // namespace opentxs
// NOLINTEND(modernize-concat-nested-namespaces)
